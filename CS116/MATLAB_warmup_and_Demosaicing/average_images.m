% Write a program that will load a a collection of images, 
% compute the pixelwise average of the images, and display the results.
% The images below give some examples that were generated by averaging
% "100 unique commemorative photographs culled from the internet" 
% by Jason Salavon. Your program will do something similar.

%%%%% first set
 filelist = dir('averageimage_data/set1/*.jpg');
 firstImage = im2double(imread(['averageimage_data/set1/' filelist(1).name]));
 redChannel = firstImage(:, :, 1);
 greenChannel = firstImage(:, :, 2);
 blueChannel = firstImage(:, :, 3);

  for i=2:length(filelist)
           imname = ['averageimage_data/set1/' filelist(i).name];
           nextim = imread(imname);
           % convert nextim to double and add it to your running average 
           nextimDouble = im2double(nextim);
           redChannel = (redChannel + nextimDouble(:,:,1));
           greenChannel = (greenChannel + nextimDouble(:,:,2));
           blueChannel = (blueChannel + nextimDouble(:,:,3));
  end
 redChannel = redChannel/length(filelist);
 greenChannel = greenChannel/length(filelist);
 blueChannel = blueChannel/length(filelist); 
 
 % Recombine separate color channels into an RGB image.
rgbImage = cat(3, redChannel, greenChannel, blueChannel);
figure;
imshow(rgbImage);

%%%%% first set



%%%%% second set 
 filelist = dir('averageimage_data/set2/*.jpg');
 firstImage = im2double(imread(['averageimage_data/set2/' filelist(1).name]));
 redChannel = firstImage(:, :, 1);
 greenChannel = firstImage(:, :, 2);
 blueChannel = firstImage(:, :, 3);

  for i=2:length(filelist)
           imname = ['averageimage_data/set2/' filelist(i).name];
           nextim = imread(imname);
           % convert nextim to double and add it to your running average 
           nextimDouble = im2double(nextim);
           redChannel = (redChannel + nextimDouble(:,:,1));
           greenChannel = (greenChannel + nextimDouble(:,:,2));
           blueChannel = (blueChannel + nextimDouble(:,:,3));
  end
 redChannel = redChannel/length(filelist);
 greenChannel = greenChannel/length(filelist);
 blueChannel = blueChannel/length(filelist); 
 
 % Recombine separate color channels into an RGB image.
rgbImage = cat(3, redChannel, greenChannel, blueChannel);
figure;
imshow(rgbImage);

%%%%% second set